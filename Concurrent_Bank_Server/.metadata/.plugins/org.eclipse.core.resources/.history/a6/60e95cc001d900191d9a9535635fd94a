/*
 * Server.cpp
 *
 *  Created on: Sep 16, 2019
 *      Author: lilbase
 */

#include "Server.h"
#include "ServerSock.h"

Server::Server() {
	// TODO Auto-generated constructor stub

}

Server::~Server() {
	// TODO Auto-generated destructor stub
}

void Server::print_stats(int signal_Number) {
    double user, sys;
    struct rusage   myusage;

    if (getrusage(RUSAGE_SELF, &myusage) < 0)
        std::cout<< "Error: getrusage()";

    user = (double) myusage.ru_utime.tv_sec +
                    myusage.ru_utime.tv_usec/1000000.0;
    sys = (double) myusage.ru_stime.tv_sec +
                   myusage.ru_stime.tv_usec/1000000.0;

    printf("\nuser time = %g, sys time = %g\n", user, sys);
    exit(0);
}

int main(int argc, char **argv) {
		Server server;
		ServerSock serverSock(strtoul(argv[1], 0, 10);
	    std::signal(SIGINT, server.print_stats);

	    if (argc > 1)
	    	ServerSock serverSock(strtoul(argv[1], 0, 10);
	    else
	      server_port = DEFAULT_SERVER_PORT;

	    if (argc > 2)
	        strcpy(redis_host_ip, argv[2]);
	    else
	        strcpy(redis_host_ip, REDIS_SERVER_HOST);


	    signal(SIGPIPE, SIG_IGN);

	    printf("ZeroHTTPd server listening on port %d\n", server_port);
	    server_socket = setup_listening_socket(server_port);
	    for (int i = 0; i < THREADS_COUNT; ++i) {
	        create_thread(i);
	    }

	    for (;;)
	        pause();
}
